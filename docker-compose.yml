version: '2.1'

services:
  eureka-server:
    build: eureka-server/
    depends_on:
      config-service:
        condition: service_healthy
    restart: always
    network_mode: "host"
    image: eureka-service
    hostname: localhost
    ports:
      - 9090:9090
    healthcheck:
      test: "exit 0"

  config-service:
    build: config-service/
    restart: always
    network_mode: "host"
    image: config-service
    hostname: localhost
    ports:
      - 8891:8891
    healthcheck:
      test: "exit 0"

  api-gateway:
    build: zuul-apigateway/
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    restart: always
    network_mode: "host"
    image: zuul-service
    hostname: localhost
    ports:
      - 8092:8092
    healthcheck:
      test: "exit 0"

 
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    network_mode: "host"
    hostname: localhost
    restart: always
    healthcheck:
      test: "exit 0"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
    network_mode: "host"
    hostname: localhost
    depends_on:
      - zookeeper
    restart: always
    healthcheck:
      test: "exit 0"
      
  mongodb:
    image: mongo
    container_name: "mongodb"
    mem_limit: '70m'
    volumes:
      - ./data/db:/data/db
    ports:
      - 27000:27017
    restart: always
    healthcheck:
      test: "exit 0"

   
  neo4j:
   image: neo4j:latest
   ports:
     - "7474:7474"
     - "7687:7687"
   restart: always
   environment:
     - NEO4J_AUTH=neo4j/12345
     - NEO4J_dbms_security_procedures_unrestricted=apoc.*
     - NEO4J_apoc_import_file_enabled=true
     - NEO4J_dbms_shell_enabled=true
   volumes:
     - ./plugins:/plugins
     - $HOME/neo4j/data:/data
     - ./import:/import
   healthcheck:
      test: "exit 0"
        
  downstream-service:
    build: downstream-service/
    image: downstream-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8095:8095
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"
    

      
  upstream-service:
    build: upstream-service/
    image: upstream-service
    mem_limit: '1000m'
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8094:8094
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  rsvp:
    build: rsvp-service/
    image: rsvp-service
    mem_limit: 800m
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8097:8097
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  search:
    build: search-service/
    image: search-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8093:8093
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  ticket:
    build: ticket-service/
    image: ticket-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8091:8091
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  user-registration:
    build: user-registration/
    image: user-registration
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8090:8090
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"
      
  show-scheduler:
    build: show-scheduler/
    image: show-scheduler
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8099:8099
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"
      
  
  recommendation:
    build: recommendation-service/
    image: recommendation-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8098:8098
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      neo4j:
        condition: service_healthy  
    healthcheck:
      test: "exit 0"
      
      
  email:
    build: email-service/
    image: email-service
    mem_limit: 1020MB
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 9000:9000
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: "exit 0"    
