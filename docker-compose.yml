version: '2.1'

services:
  eureka-server:
    build: eureka-server/
    depends_on:
      config-service:
        condition: service_healthy
    restart: always
    network_mode: "host"
    image: eureka-service
    hostname: localhost
    ports:
      - 9090:9090
    healthcheck:
      test: "exit 0"

  config-service:
    build: config-service/
    restart: always
    network_mode: "host"
    image: config-service
    hostname: localhost
    ports:
      - 8891:8891
    healthcheck:
      test: "exit 0"

#  api-gateway:
#    build: zuul-apigateway/
#    depends_on:
#      config-service:
#        condition: service_healthy
#      eureka-server:
#        condition: service_healthy
#    restart: always
#    network_mode: "host"
#    image: zuul-service
#    hostname: localhost
#    ports:
#      - 8092:8092
#    healthcheck:
#      test: "exit 0"

 
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: always
    healthcheck:
      test: "exit 0"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
    restart: always
    healthcheck:
      test: "exit 0"
      
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
    ports:
      - 27000:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet
    healthcheck:
      test: "exit 0"
      
  downstream-service:
    build: downstream-service/
    image: downstream-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8085:8085
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"
    

      
  upstream-service:
    build: upstream-service/
    image: upstream-service
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8084:8084
    depends_on:
      config-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: "exit 0"
